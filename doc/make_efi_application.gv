digraph make_efi_application {	
	rankdir=LR
	node [shape=box style=filled fixedsize=true width=6]
	ranksep=3
	nodesep="1"
	constraint=false
	edge [headport="w" tailport="e"]
	
	"make_efi_application.sh"
	
	"make_efi_application.sh" -> "build_security_config.sh"
	"build_security_config.sh" -> {
		node[style=solid shape=ellipse]
		"ST_BOOT_COMMON_ROOTCERT_FINGERPRINT_FILE"
		"ST_BOOT_COMMON_NUM_SIGNATURES"
		"ST_BOOT_COMMON_BOOT_MODE"
	}
	
	"make_efi_application.sh" -> "build_initramfs.sh"
	"build_initramfs.sh" -> {
		node[style=solid shape=ellipse constraint=false]
		"ST_BOOT_COMMON_LINUXBOOT_VARIANT"
	}
	
	"make_efi_application.sh" -> "build_kernel.sh"
	"build_kernel.sh" -> {
		node[style=solid shape=ellipse constraint=false]
		"ST_BOOT_COMMON_CUSTOMIZE_KERNEL_CONFIG"
	}
	
	"make_efi_application.sh" -> "build_host_config.sh"
	"build_host_config.sh" -> {
		node[style=solid shape=ellipse]
		"ST_BOOT_COMMON_NETWORK_MODE"
		"ST_BOOT_COMMON_NETWORK_HOST_IP"
		"ST_BOOT_COMMON_NETWORK_HOST_GATEWAY"
		"ST_BOOT_COMMON_NETWORK_HOST_DNS"
		"ST_BOOT_COMMON_PROVISIONING_SERVER_URL"
	}
	
	"make_efi_application.sh" -> "build_boot_filesystem.sh"
	
	"make_efi_application.sh" -> "build_data_filesystem.sh"
	"build_data_filesystem.sh" -> {
		node[style=solid shape=ellipse]
		"ST_BOOT_COMMON_DATA_PARTITION_SIZE"
	}
	
	"make_efi_application.sh" -> "build_image.sh"

	"make_efi_application.sh" -> {
		node[style=solid shape=ellipse]
		"ST_BOOT_EFI_KERNEL_VERSION"
		"ST_BOOT_EFI_KERNEL_CONFIG"
		"ST_BOOT_COMMON_LINUXBOOT_CMDLINE"
	}

}
